@model Horizone.Models.Verb

@{
    ViewBag.Title = @StaticResource.Resources.Details;
}

<h2>@StaticResource.Resources.Details</h2>

<div>
    <h4>@StaticResource.Resources.Verb</h4>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.TochWord)
        </dt>

        <dd style="font-size: medium; font-weight:bold;">
            <strong>  @Html.DisplayFor(model => model.TochWord) </strong>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Sanskrit)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Sanskrit)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.English)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.English)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Francaise)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Francaise)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.German)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.German)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Latin)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Latin)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Chinese)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Chinese)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.TochLanguage.Language)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TochLanguage.Language)
        </dd>
        <dd>
            @Html.DisplayFor(model => model.TochLanguage.Language)
        </dd>
        @if (Model.TochLanguage.Language == "TA")
        {
            <dt>
                @Html.DisplayNameFor(model => model.EquivalentTB)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.EquivalentTB)
            </dd>
        }
        @if (Model.TochLanguage.Language == "TB")
        {
            <dt>
                @Html.DisplayNameFor(model => model.EquivalentTA)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.EquivalentTA)
            </dd>
        }
        <dt>
            @Html.DisplayNameFor(model => model.TochCorrespondence)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TochCorrespondence)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EquivalentInOther)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EquivalentInOther)
        </dd>

        @if (Session[Horizone.Common.CommonConstants.CurrentCulture].ToString() == "en")
        {
            <dt>
                @Html.DisplayNameFor(model => model.WordClass.Class)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.WordClass.ClassEn)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.WordSubClass.SubClass)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.WordSubClass.SubClassEn)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Mood.MoodEn)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Mood.MoodEn)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.TenseAndAspect.TenseEn)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.TenseAndAspect.TenseEn)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Valency.AbbreviationValency)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Valency.ValencyEn)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Voice.AbbreviationVoice)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Voice.VoiceEn)
            </dd>
            <dt>
                @StaticResource.Resources.Person
            </dt>
            <dd>
                <table class="table table-striped">
                    @foreach (var item in Model.Persons)
                    {
                        <tr><td>@item.ConjugatedPersonEn</td></tr>
                    }

                </table>
            </dd>
       
        <dt>
            @StaticResource.Resources.Number
        </dt>
        <dd>
            <table class="table table-striped">
                @foreach (var item in Model.Numbers)
                {
                    <tr><td>@item.WordNumberEn</td></tr>
                }

            </table>
        </dd>
        }

        @if (Session[Horizone.Common.CommonConstants.CurrentCulture].ToString() == "fr")
        {
            <dt>
                @Html.DisplayNameFor(model => model.WordClass.Class)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.WordClass.ClassFr)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.WordSubClass.SubClass)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.WordSubClass.SubClassFr)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Mood.MoodFr)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Mood.MoodFr)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.TenseAndAspect.TenseFr)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.TenseAndAspect.TenseFr)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Valency.AbbreviationValency)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Valency.ValencyFr)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Voice.AbbreviationVoice)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Voice.VoiceFr)
            </dd>
            <dt>
                @StaticResource.Resources.Person
            </dt>
            <dd>
                <table class="table table-striped">
                    @foreach (var item in Model.Persons)
                    {
                        <tr><td>@item.ConjugatedPersonEn</td></tr>
                    }

                </table>
            </dd>

            <dt>
                @StaticResource.Resources.Number
            </dt>
            <dd>
                <table class="table table-striped">
                    @foreach (var item in Model.Numbers)
                    {
                        <tr><td>@item.WordNumberFr</td></tr>
                    }

                </table>
            </dd>

        }

        @if (Session[Horizone.Common.CommonConstants.CurrentCulture].ToString() == "zh")
        {
            <dt>
                @Html.DisplayNameFor(model => model.WordClass.Class)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.WordClass.ClassZh)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.WordSubClass.SubClass)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.WordSubClass.SubClassZh)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Mood.MoodZh)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Mood.MoodZh)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.TenseAndAspect.Tense)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.TenseAndAspect.TenseZh)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Valency.AbbreviationValency)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Valency.ValencyZh)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Voice.AbbreviationVoice)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Voice.VoiceZh)
            </dd>
            <dt>
                @StaticResource.Resources.Person
            </dt>
            <dd>
                <table class="table table-striped">
                    @foreach (var item in Model.Persons)
                    {
                        <tr><td>@item.ConjugatedPersonEn</td></tr>
                    }

                </table>
            </dd>

            <dt>
                @StaticResource.Resources.Number
            </dt>
            <dd>
                <table class="table table-striped">
                    @foreach (var item in Model.Numbers)
                    {
                        <tr><td>@item.WordNumberZh</td></tr>
                    }

                </table>
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.PronounSuffix)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PronounSuffix)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DerivedFrom)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DerivedFrom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RelatedLexemes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RelatedLexemes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RootCharacter)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RootCharacter)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.InternalRootVowel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.InternalRootVowel)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Stem)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Stem)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StemClass)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StemClass)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Visible)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Visible)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink(StaticResource.Resources.Return, "Verb", null, new { @class = "btn btn-primary", style = "width:85px" }) |
</p>
