@model Horizone.Models.DictionaryTocharian

@{
    ViewBag.Title = @StaticResource.Resources.Details;
}

<h2>@StaticResource.Resources.Details</h2>

<div>
    <h4>@StaticResource.Resources.DictionaryTocharian</h4>
    <hr />
    @*Partie Commun*@
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Word)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Word)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TochLanguage.Language)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.TochLanguage.Language)
        </dd>
        @if (Model.TochLanguage.Language == "TA")
        {
            <dt>
                @Html.DisplayNameFor(model => model.EquivalentTB)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.EquivalentTB)
            </dd>
        }
        @if (Model.TochLanguage.Language == "TB")
        {
            <dt>
                @Html.DisplayNameFor(model => model.EquivalentTA)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.EquivalentTA)
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.EquivalentInOther)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EquivalentInOther)
        </dd>
        <dt>
            @StaticResource.Resources.Meaning @Html.DisplayNameFor(model => model.English)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.English)
        </dd>
        <dt>
            @StaticResource.Resources.Meaning @Html.DisplayNameFor(model => model.Francaise)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Francaise)
        </dd>
        <dt>
            @StaticResource.Resources.Meaning @Html.DisplayNameFor(model => model.German)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.German)
        </dd>

        <dt>
            @StaticResource.Resources.Meaning @Html.DisplayNameFor(model => model.Latin)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Latin)
        </dd>
        <dt>
            @StaticResource.Resources.Meaning  @Html.DisplayNameFor(model => model.Chinese)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Chinese)
        </dd>

        @if (Session[Horizone.Common.CommonConstants.CurrentCulture].ToString() == "en")
        {
            <dt>
                @Html.DisplayNameFor(model => model.WordClass.Class)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.WordClass.ClassEn)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.WordSubClass.SubClass)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.WordSubClass.SubClassEn)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Mood.MoodEn)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Mood.MoodEn)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.TenseAndAspect.TenseEn)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.TenseAndAspect.TenseEn)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Valency.AbbreviationValency)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Valency.ValencyEn)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Voice.AbbreviationVoice)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Voice.VoiceEn)
            </dd>
        }

        @if (Session[Horizone.Common.CommonConstants.CurrentCulture].ToString() == "fr")
        {
            <dt>
                @Html.DisplayNameFor(model => model.WordClass.Class)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.WordClass.ClassFr)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.WordSubClass.SubClass)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.WordSubClass.SubClassFr)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Mood.MoodFr)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Mood.MoodFr)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.TenseAndAspect.TenseFr)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.TenseAndAspect.TenseFr)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Valency.AbbreviationValency)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Valency.ValencyFr)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Voice.AbbreviationVoice)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Voice.VoiceFr)
            </dd>
        }

        @if (Session[Horizone.Common.CommonConstants.CurrentCulture].ToString() == "zh")
        {
            <dt>
                @Html.DisplayNameFor(model => model.WordClass.Class)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.WordClass.ClassZh)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.WordSubClass.SubClass)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.WordSubClass.SubClassZh)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Mood.MoodZh)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Mood.MoodZh)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.TenseAndAspect.Tense)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.TenseAndAspect.TenseZh)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Valency.AbbreviationValency)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Valency.ValencyZh)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Voice.AbbreviationVoice)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Voice.VoiceZh)
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.DerivedFrom)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DerivedFrom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RelatedLexemes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RelatedLexemes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RootCharacter)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RootCharacter)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.InternalRootVowel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.InternalRootVowel)
        </dd>
        <dt>
            @StaticResource.Resources.Case
        </dt>
        <dd>
            <table class="table table-striped">
                @foreach (var item in Model.Cases)
                {
                    <tr><td>@item.NameCaseEn</td></tr>
                }

            </table>
        </dd>
        <dt>
            @StaticResource.Resources.Gender
        </dt>
        <dd>
            <table class="table table-striped">
                @foreach (var item in Model.Genders)
                {
                    <tr><td>@item.NameGenderEn</td></tr>
                }

            </table>
        </dd>
        <dt>
            @StaticResource.Resources.Number
        </dt>
        <dd>
            <table class="table table-striped">
                @foreach (var item in Model.Numbers)
                {
                    <tr><td>@item.WordNumberEn</td></tr>
                }

            </table>
        </dd>
        <dt>
            @StaticResource.Resources.Person
        </dt>
        <dd>
            <table class="table table-striped">
                @foreach (var item in Model.Persons)
                {
                    <tr><td>@item.ConjugatedPersonEn</td></tr>
                }

            </table>
        </dd>
    </dl>

   
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Stem)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Stem)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.StemClass)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.StemClass)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PronounSuffix)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PronounSuffix)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Visible)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Visible)
        </dd>
    </dl>
</div>
<p>
    @Html.ActionLink(StaticResource.Resources.Return, "Vocabulaire", null, new { @class = "btn btn-primary", style = "width:85px" }) |
    @Html.ActionLink(StaticResource.Resources.ReverseDictionary, "CheckReverse", new { id = Model.Id }, new { @class = "btn_special", style = "width:185px" })
</p>