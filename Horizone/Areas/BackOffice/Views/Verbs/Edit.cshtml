@model Horizone.Models.Verb
@{
    ViewBag.Title = @StaticResource.Resources.Edit;
}

<h2>@StaticResource.Resources.Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>@StaticResource.Resources.Verb : <strong>" @Model.DictionaryTocharian.Word " </strong></h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.DictionaryId, "DictionaryId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DictionaryId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DictionaryId, "", new { @class = "text-danger" })
        </div>
    </div>
      
    @if (Session[Horizone.Common.CommonConstants.CurrentCulture].ToString() == "en")
    {
        <div class="form-group">
            <label class="control-label col-md-2">@StaticResource.Resources.Person</label>
            <div class="col-md-10">
                @Html.ListBox("PersonId", (MultiSelectList)ViewBag.PersonsEn, new { @class = "form-control" }) (<label style="color:red;">*  @StaticResource.Resources.Required </label>)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VoiceId, @StaticResource.Resources.Voice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("VoiceId", (SelectList)ViewBag.VoiceEnId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VoiceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValencyId, "ValencyId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ValencyId", (SelectList)ViewBag.ValencyEnId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ValencyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenseAndAspectId, @StaticResource.Resources.TenseAndAspect, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TenseAndAspectId", (SelectList)ViewBag.TenseAndAspectEnId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TenseAndAspectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoodId, @StaticResource.Resources.Mood, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MoodId", (SelectList)ViewBag.MoodEnId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MoodId, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    @if (Session[Horizone.Common.CommonConstants.CurrentCulture].ToString() == "fr")
    {
        <div class="form-group">
            <label class="control-label col-md-2">@StaticResource.Resources.Person</label>
            <div class="col-md-10">
                @Html.ListBox("PersonId", (MultiSelectList)ViewBag.PersonsFr, new { @class = "form-control" }) (<label style="color:red;">*  @StaticResource.Resources.Required </label>)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VoiceId, @StaticResource.Resources.Voice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("VoiceId", (SelectList)ViewBag.VoiceFrId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VoiceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValencyId, "ValencyId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ValencyId", (SelectList)ViewBag.ValencyFrId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ValencyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenseAndAspectId, @StaticResource.Resources.TenseAndAspect, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TenseAndAspectId", (SelectList)ViewBag.TenseAndAspectFrId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TenseAndAspectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoodId, @StaticResource.Resources.Mood, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MoodId", (SelectList)ViewBag.MoodFrId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MoodId, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    @if (Session[Horizone.Common.CommonConstants.CurrentCulture].ToString() == "zh")
    {
        <div class="form-group">
            <label class="control-label col-md-2">@StaticResource.Resources.Person</label>
            <div class="col-md-10">
                @Html.ListBox("PersonId", (MultiSelectList)ViewBag.PersonsZh, new { @class = "form-control" }) (<label style="color:red;">*  @StaticResource.Resources.Required </label>)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VoiceId, @StaticResource.Resources.Voice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("VoiceId", (SelectList)ViewBag.VoiceZhId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VoiceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValencyId, "ValencyId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ValencyId", (SelectList)ViewBag.ValencyZhId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ValencyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenseAndAspectId, @StaticResource.Resources.TenseAndAspect, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TenseAndAspectId", (SelectList)ViewBag.TenseAndAspectZhId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TenseAndAspectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoodId, @StaticResource.Resources.Mood, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MoodId", (SelectList)ViewBag.MoodZhId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MoodId, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.PronounSuffix, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PronounSuffix, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PronounSuffix, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div>
            <input type="submit" value=@StaticResource.Resources.Save class="btn btn-primary" style="width:95px" />
            @Html.ActionLink(@StaticResource.Resources.Return, "Index", null, new { @class = "btn btn-default", style = "width:95px" })
        </div>

    </div>
</div>
}

