@model Horizone.Models.Presentation

@{
    ViewBag.Title = @StaticResource.Resources.Edit;
}
@using (Html.BeginForm())
{
    <div class="row">
        @{Html.RenderAction("SpecialCharacter", "DashBoards"); }
    </div>
}

<h4>@StaticResource.Resources.Edit</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Presentation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.AboutUs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AboutUs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AboutUs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TochPhrase, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TochPhrase, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TochPhrase, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TochStory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TochStory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TochStory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manuscript, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manuscript, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manuscript, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Activity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Activity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bibliography, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bibliography, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bibliography, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DictionaryTocharian, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DictionaryTocharian, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DictionaryTocharian, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VisualAids, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VisualAids, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VisualAids, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LanguageId, "LanguageId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LanguageId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LanguageId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@StaticResource.Resources.Save class="btn btn-primary" />
                @Html.ActionLink(@StaticResource.Resources.Return, "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    <script>
        function insertText(elemID, text) {
            document.getElementById(elemID).value += text;
        };

        $(function () {
            tinymce.init({ selector: '#TochPhrase' });
            tinymce.init({ selector: '#TochStory' });
            tinymce.init({ selector: '#Manuscript' });
            tinymce.init({ selector: '#DictionaryTocharian' });
            tinymce.init({ selector: '#AboutUs' });
            tinymce.init({ selector: '#Activity' });
            tinymce.init({ selector: '#Bibliography' });
            tinymce.init({ selector: '#VisualAids' });

        });
    </script>
}
