@model Horizone.Models.TochPhrase

@{
    ViewBag.Title = @StaticResource.Resources.Add;
}
@using (Html.BeginForm())
{
    <div class="row">
        @{Html.RenderAction("SpecialCharacter", "DashBoards"); }
    </div>
}

<h2>@StaticResource.Resources.Add</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@StaticResource.Resources.TochPhrase</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Phrase, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label for="search">@StaticResource.Resources.Insert @StaticResource.Resources.SpecialCharacter : </label>
                <a onclick="insertText('Phrase','ā');" href="#" style="background-color: blanchedalmond; padding:5px"> ā  </a>
                <a onclick="insertText('Phrase','ä');" href="#" style="background-color: blanchedalmond; padding:5px"> ä  </a>
                <a onclick="insertText('Phrase','ī');" href="#" style="background-color: blanchedalmond; padding:5px"> ī  </a>
                <a onclick="insertText('Phrase','ö');" href="#" style="background-color: blanchedalmond; padding:5px"> ö  </a>
                <a onclick="insertText('Phrase','ū');" href="#" style="background-color: blanchedalmond; padding:5px"> ū  </a>
                <a onclick="insertText('Phrase','ü');" href="#" style="background-color: blanchedalmond; padding:5px"> ü  </a>
                <a onclick="insertText('Phrase','ṅ');" href="#" style="background-color: blanchedalmond; padding:5px"> ṅ  </a>
                <a onclick="insertText('Phrase','ñ');" href="#" style="background-color: blanchedalmond; padding:5px"> ñ  </a>
                <a onclick="insertText('Phrase','ṇ');" href="#" style="background-color: blanchedalmond; padding:5px"> ṇ  </a>
                <a onclick="insertText('Phrase','ṃ');" href="#" style="background-color: blanchedalmond; padding:5px"> ṃ  </a>
                <a onclick="insertText('Phrase','ś');" href="#" style="background-color: blanchedalmond; padding:5px"> ś  </a>
                <a onclick="insertText('Phrase','ṣ');" href="#" style="background-color: blanchedalmond; padding:5px"> ṣ  </a>
                <a onclick="insertText('Phrase','ṛ');" href="#" style="background-color: blanchedalmond; padding:5px"> ṛ  </a>
                <a onclick="insertText('Phrase','ṭ');" href="#" style="background-color: blanchedalmond; padding:5px"> ṭ  </a>
                <a onclick="insertText('Phrase','š');" href="#" style="background-color: blanchedalmond; padding:5px"> š  </a>
                <a onclick="insertText('Phrase','ß');" href="#" style="background-color: blanchedalmond; padding:5px"> ß  </a>
                <a onclick="insertText('Phrase','ḍ');" href="#" style="background-color: blanchedalmond; padding:5px"> ḍ  </a>
                <a onclick="insertText('Phrase','Ā');" href="#" style="background-color: blanchedalmond; padding:5px"> Ā  </a>
                <a onclick="insertText('Phrase','Ū');" href="#" style="background-color: blanchedalmond; padding:5px"> Ū  </a>
                <a onclick="insertText('Phrase','Ṃ');" href="#" style="background-color: blanchedalmond; padding:5px"> Ṃ  </a>
                <a onclick="insertText('Phrase','Ṇ');" href="#" style="background-color: blanchedalmond; padding:5px"> Ṇ  </a>
                <a onclick="insertText('Phrase','Ñ');" href="#" style="background-color: blanchedalmond; padding:5px"> Ñ  </a>
                @Html.EditorFor(model => model.Phrase, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phrase, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.English, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.English, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.English, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Francaise, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Francaise, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Francaise, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Chinese, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Chinese, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Chinese, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TochLanguageId, "TochLanguageId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TochLanguageId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TochLanguageId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DerivedFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DerivedFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DerivedFrom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RelatedLexemes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RelatedLexemes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RelatedLexemes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Visible, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Visible)
                    @Html.ValidationMessageFor(model => model.Visible, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@StaticResource.Resources.Add class="btn btn-info" />
                @Html.ActionLink(StaticResource.Resources.Cancel, "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    <script>
        function insertText(elemID, text) {
            document.getElementById(elemID).value += text;
        };

        $(function () {
            tinymce.init({ selector: '#Description' });
            tinymce.init({ selector: '#Symbol' });
        });
    </script>
}
