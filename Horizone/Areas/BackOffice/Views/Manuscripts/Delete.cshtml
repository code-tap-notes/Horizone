@model Horizone.Models.Manuscript

@{
    ViewBag.Title = @StaticResource.Resources.Delete;
}

<h2> @StaticResource.Resources.Delete</h2>

<h3 class="text-danger"> @StaticResource.Resources.AskDelete</h3>

<div>
    <h4>@StaticResource.Resources.Manuscript</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.AlignmentType.AlignmentTypeEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AlignmentType.AlignmentTypeEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DescriptionManuscript.DescriptionEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DescriptionManuscript.DescriptionEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Format.FormatEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Format.FormatEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GenderManuscript.NameGenderEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.GenderManuscript.NameGenderEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LanguageDetail.LanguageDetailEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LanguageDetail.LanguageDetailEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LanguageStage.LanguageStageEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LanguageStage.LanguageStageEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Material.MaterialEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Material.MaterialEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Metric.MetricEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Metric.MetricEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PaperColor.PaperColorEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PaperColor.PaperColorEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RemarkAdd.RemarkEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RemarkAdd.RemarkEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Ruling.RulingEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Ruling.RulingEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RulingColor.RulingColorEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RulingColor.RulingColorEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RulingDetail.RulingDetailEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RulingDetail.RulingDetailEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Script.ScriptEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Script.ScriptEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ScriptAdd.ScriptAddEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ScriptAdd.ScriptAddEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State.StateEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State.StateEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SubGenderManuscript.SubGenderEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SubGenderManuscript.SubGenderEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TochLanguage.Language)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TochLanguage.Language)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.WritingTool.WritingToolEn)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.WritingTool.WritingToolEn)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Index)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Index)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Collection)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Collection)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Siglum)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Siglum)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Joint)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Joint)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OtherSiglum)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OtherSiglum)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ExpeditionCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ExpeditionCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SpecificFindSpot)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SpecificFindSpot)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LeafNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LeafNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SizeHeight)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SizeHeight)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Completeness)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Completeness)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SizeWidth)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SizeWidth)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NumberOfLine)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NumberOfLine)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LineDistance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LineDistance)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StringholeHeight)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StringholeHeight)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StringholeWidth)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StringholeWidth)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DistanceStringholeRight)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DistanceStringholeRight)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DistanceStringholeLeft)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DistanceStringholeLeft)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.InterruptedLine)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.InterruptedLine)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Transliteration)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Transliteration)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Transcription)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Transcription)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.English)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.English)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Francaise)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Francaise)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Chinese)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Chinese)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Editor)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Editor)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.References)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.References)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PhilologicalCommentary)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PhilologicalCommentary)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PaperThickness)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PaperThickness)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ModuleWidth)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ModuleWidth)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ModuleHeight)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ModuleHeight)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AvCharPerLigne)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AvCharPerLigne)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NibThickness)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NibThickness)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Passage)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Passage)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Parallel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Parallel)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Tune)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Tune)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Cetom)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Cetom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Visible)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Visible)
        </dd>

    </dl>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-danger" /> |
            @Html.ActionLink(@StaticResource.Resources.Return, "Index", null, new { @class = "btn btn-default" })
        </div>
    }
</div>
