@model Horizone.Models.Manuscript

@{
    ViewBag.Title = @StaticResource.Resources.Edit;
}
@using (Html.BeginForm())
{
    <div class="row">
        @{Html.RenderAction("SpecialCharacter", "DashBoards"); }
    </div>
}
<h2>@StaticResource.Resources.Edit</h2>

<div class="detail">
    <h2>@StaticResource.Resources.Edit</h2>
    <div class="row container-fluid">
        <div class="row">
            <div class="col-md-6">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>@StaticResource.Resources.Manuscript</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Index, htmlAttributes: new { @class = "col-md-6" })
                                <div class="col-md-6">
                                    @*<input class="form-control" type="text" id="Index" name="Index" value="@Model.Index" />*@
                                    @Html.EditorFor(model => model.Index, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Index, "", new { @class = "text-danger" })
                                </div>
                            </div>                         
                        </div>
                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CatalogieId, "CatalogieId", htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-6">
                                    @Html.DropDownList("CatalogieId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CatalogieId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Siglum, htmlAttributes: new { @class = "col-md-6" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.Siglum, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Siglum, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="col-md-6">
                <h3>@StaticResource.Resources.Picture</h3>
                <form action="@Url.Action("AddPicture", "Manuscripts")" method="post" enctype="multipart/form-data">

                    @Html.HiddenFor(x => x.Id)
                    <div class="form-group">
                        <label for="if">@StaticResource.Resources.File</label>
                        <input type="file" id="if" name="picture" />
                    </div>
                    <button type="submit" class="btn btn-info">@StaticResource.Resources.Add</button>
                </form>
                <div class="row">
                    @if (Model.ImageManuscripts != null)
                    {
                        foreach (var picture in Model.ImageManuscripts)
                        {
                            <div class="col-md-2" id="@picture.Id">
                                <img src="data:@picture.ContentType;base64,@Convert.ToBase64String(picture.Content)" class="img-thumbnail" />
                                <p><a id="delete" class="delete" href="@Url.Action("DeletePicture", "Manuscripts", new {id=picture.Id, idmanuscript=picture.ManuscriptId })"> <i class="glyphicon glyphicon-trash"></i> </a></p>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <h4><b><u>@StaticResource.Resources.OverallDescription</u></b></h4>
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group">

                            @Html.LabelFor(model => model.Collection, htmlAttributes: new { @class = "col-md-6" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Collection, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Collection, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Joint, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Joint, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Joint, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.OtherSiglum, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.OtherSiglum, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OtherSiglum, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ExpeditionCode, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.ExpeditionCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ExpeditionCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.MapId, "MapId", htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.DropDownList("MapId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MapId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SpecificFindSpot, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.SpecificFindSpot, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SpecificFindSpot, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.StateId, "StateId", htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.DropDownList("StateId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DescriptionManuscriptId, "DescriptionManuscriptId", htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.DropDownList("DescriptionManuscriptId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DescriptionManuscriptId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RemarkAddId, "RemarkAddId", htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.DropDownList("RemarkAddId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RemarkAddId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LeafNumber, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.LeafNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LeafNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <h4><b><u> @StaticResource.Resources.LayoutManuscript</u></b></h4>
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SizeHeight, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SizeHeight, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SizeHeight, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Completeness, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Completeness, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Completeness, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.SizeWidth, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SizeWidth, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SizeWidth, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NumberOfLine, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NumberOfLine, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NumberOfLine, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LineDistance, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LineDistance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LineDistance, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">

                        <div class="form-group">
                            @Html.LabelFor(model => model.FormatId, "FormatId", htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.DropDownList("FormatId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FormatId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RulingId, "RulingId", htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.DropDownList("RulingId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RulingId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">

                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RulingColorId, "RulingColorId", htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.DropDownList("RulingColorId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RulingColorId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RulingDetailId, "RulingDetailId", htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.DropDownList("RulingDetailId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RulingDetailId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.StringholeHeight, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.StringholeHeight, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StringholeHeight, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.StringholeWidth, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.StringholeWidth, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StringholeWidth, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DistanceStringholeRight, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.DistanceStringholeRight, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DistanceStringholeRight, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DistanceStringholeLeft, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.DistanceStringholeLeft, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DistanceStringholeLeft, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.InterruptedLine, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.InterruptedLine, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InterruptedLine, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @* cho nay chu y*@
                                    <div class="row">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Transliteration, htmlAttributes: new { @class = "col-md-4" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Transliteration, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Transliteration, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Transcription, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Transcription, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Transcription, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.English, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.English, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.English, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Francaise, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Francaise, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Francaise, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Chinese, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Chinese, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Chinese, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Editor, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Editor, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Editor, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.References, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.References, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.References, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.PhilologicalCommentary, htmlAttributes: new { @class = "control-label col-md-4" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.PhilologicalCommentary, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.PhilologicalCommentary, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <h4><b><u>@StaticResource.Resources.Material</u></b></h4>
                                        <div class="col-md-6">
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.MaterialId, "MaterialId", htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("MaterialId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.MaterialId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.PaperColorId, "PaperColorId", htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("PaperColorId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.PaperColorId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="row">

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.PaperThickness, htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.PaperThickness, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.PaperThickness, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.WritingToolId, "WritingToolId", htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("WritingToolId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.WritingToolId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <h4><b><u>@StaticResource.Resources.Script</u></b></h4>
                                        <div class="col-md-6">
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.AlignmentTypeId, "AlignmentTypeId", htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("AlignmentTypeId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.AlignmentTypeId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ModuleWidth, htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.ModuleWidth, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.ModuleWidth, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ModuleHeight, htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.ModuleHeight, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.ModuleHeight, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.AvCharPerLigne, htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.AvCharPerLigne, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.AvCharPerLigne, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.NibThickness, htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.NibThickness, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.NibThickness, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ScriptId, "ScriptId", htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("ScriptId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.ScriptId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.ScriptAddId, "ScriptAddId", htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("ScriptAddId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.ScriptAddId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <h4><b><u>@StaticResource.Resources.TextContent</u></b></h4>

                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.GenderManuscriptId, "GenderManuscriptId", htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("GenderManuscriptId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.GenderManuscriptId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.SubGenderManuscriptId, "SubGenderManuscriptId", htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("SubGenderManuscriptId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.SubGenderManuscriptId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Passage, htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.Passage, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Passage, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Parallel, htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.Parallel, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Parallel, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.MetricId, "MetricId", htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("MetricId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.MetricId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Tune, htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.EditorFor(model => model.Tune, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.Tune, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <h4><b><u>@StaticResource.Resources.TochLanguage</u></b></h4>
                                            <div class="row">

                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.TochLanguageId, "TochLanguageId", htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("TochLanguageId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.TochLanguageId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LanguageStageId, "LanguageStageId", htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("LanguageStageId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.LanguageStageId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LanguageDetailId, "LanguageDetailId", htmlAttributes: new { @class = "control-label col-md-6" })
                                                    <div class="col-md-6">
                                                        @Html.DropDownList("LanguageDetailId", null, htmlAttributes: new { @class = "form-control" })
                                                        @Html.ValidationMessageFor(model => model.LanguageDetailId, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Cetom, htmlAttributes: new { @class = "col-md-12" })
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.Cetom, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Cetom, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="col-md-12">@StaticResource.Resources.Bibliography</label>
                                        <div class="list-group">
                                            @Html.ListBox("BibliographyId", (MultiSelectList)ViewBag.Bibliographys, new { @class = "form-control", Styles = "Height: 10; width: 60" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Visible, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.Visible)
                                                @Html.ValidationMessageFor(model => model.Visible, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value=@StaticResource.Resources.Save class="btn btn-primary" />
                                            @Html.ActionLink(@StaticResource.Resources.Return, "Index", null, new { @class = "btn btn-default" })
                                        </div>
                                    </div>
                                    }
                                </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    <script>
        function insertText(elemID, text) {
            document.getElementById(elemID).value += text;
        };
        $(function () {
            tinymce.init({ selector: '#Transliteration' });
            tinymce.init({ selector: '#Transcription' });
            tinymce.init({ selector: '#English' });
            tinymce.init({ selector: '#Francaise' });
            tinymce.init({ selector: '#Chinese' });
            tinymce.init({ selector: '#References' });
            tinymce.init({ selector: '#PhilologicalCommentary' });
        });
        const btn = document.querySelector('#delete');
        btn.addEventListener('click', ev => {
            if (confirm("Voulez-vous supprimer cette photo ?") === false) {
                ev.preventDefault();
            }
        });
          $('a.delete').click(function () {
                var idPicture = $(this).data("id");
                //alert(idPicture);
                $.ajax({
                    url: '@Url.Action("deletePicture", "Manuscripts")',
                    type: 'POST',
                    dataType: 'json',
                    data: { id: idPicture },
                    success: function (obj) {
                        alert("l'image " + obj.Name + " a été supprimée.");
                        $("#div-" + idPicture).fadeOut();
                    }
                });
            });
    </script>
}
 
