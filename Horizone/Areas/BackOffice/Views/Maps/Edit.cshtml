@model Horizone.Models.Map
@using (Html.BeginForm())
{
    <div class="row">
        @{Html.RenderAction("SpecialCharacter", "DashBoards"); }
    </div>
}
<h2>@StaticResource.Resources.Edit</h2>


<div class="detail">
    <h2>@StaticResource.Resources.Edit</h2>
    <div class="row container-fluid">
        <div class="col-md-6">

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>@StaticResource.Resources.Maps</h4>
                    <hr />

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    <div class="form-group">
                        @Html.LabelFor(model => model.NamePicture, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NamePicture, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NamePicture, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value=@StaticResource.Resources.Save class="btn btn-primary" />
                            @Html.ActionLink(@StaticResource.Resources.Return, "Index", null, new { @class = "btn btn-default" })
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-6">
            <h3>@StaticResource.Resources.Picture</h3>
            <form action="@Url.Action("AddPicture", "Maps")" method="post" enctype="multipart/form-data">

                @Html.HiddenFor(x => x.Id)
                <div class="form-group">
                    <label for="if">@StaticResource.Resources.File</label>
                    <input type="file" id="if" name="picture" />
                </div>
                <button type="submit" class="btn btn-info">@StaticResource.Resources.Add</button>
            </form>
            <div class="row">
                @if (Model.ImageMaps != null)
                {
                    foreach (var picture in Model.ImageMaps)
                    {
                        <div class="col-md-2" id="@picture.Id">
                            <img src="data:@picture.ContentType;base64,@Convert.ToBase64String(picture.Content)" class="img-thumbnail" />
                            <p><a id="delete" class="delete" href="@Url.Action("DeletePicture", "Maps", new {id=picture.Id, idnews=picture.MapId })"> <i class="glyphicon glyphicon-trash"></i> </a></p>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")

    <script>
        function insertText(elemID, text) {
            document.getElementById(elemID).value += text;
        };
        const btn = document.querySelector('#delete');
        btn.addEventListener('click', ev => {
            if (confirm(@StaticResource.Resources.AskDelete ) === false) {
                ev.preventDefault();
            }
        });
          $('a.delete').click(function () {
                var idPicture = $(this).data("id");
                //alert(idPicture);
                $.ajax({
                    url: '@Url.Action("deletePicture", "News")',
                    type: 'POST',
                    dataType: 'json',
                    data: { id: idPicture },
                    success: function (obj) {
                        alert(@StaticResource.Resources.Picture + obj.Name + @StaticResource.Resources.Del);
                        $("#div-" + idPicture).fadeOut();
                    }
                });
            });
    </script>
}
 